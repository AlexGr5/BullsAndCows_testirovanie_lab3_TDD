name: Java CI with Gradle

on:
  push:
    branches:
      - master  # или любая другая ветка
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Разрешение на запись в репозиторий

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Install Gradle
        run: sudo apt-get update && sudo apt-get install -y gradle

      - name: Give permissions to gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Run tests
        run: ./gradlew test


      - name: Check if secrets are set
        run: |
          echo "DOCKER_USERNAME is set: ${{ secrets.DOCKER_USERNAME != '' }}"
          echo "DOCKER_PASSWORD is set: ${{ secrets.DOCKER_PASSWORD != '' }}"

      # Логин в Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Логин для Docker Hub
          password: ${{ secrets.DOCKER_PASSWORD }}  # Токен для Docker Hub

      # Сборка Docker образа
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-repo:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/my-repo:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/my-repo:latest

      # Пуш Docker образа в Docker Hub
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-repo:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/my-repo:latest

      # Проверка собранных Docker образов
      - name: Verify Docker image
        run: docker images
